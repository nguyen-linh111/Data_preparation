# Data_preparation
import pygame, sys
import numpy as np

pygame.init()
line_color = (7, 238, 145)
board_rows = 6
board_cols = 6
# create_the_screen
screen = pygame.display.set_mode((900, 900))
pygame.display.set_caption('tic-tac-toe')
# create board
board = np.zeros(board_rows, board_cols)


def draw_lines():
    pygame.draw.line(screen, line_color, (0, 300), (900, 300), 10)
    pygame.draw.line(screen, line_color, (0, 600), (900, 600), 10)
    pygame.draw.line(screen, line_color, (300, 0), (300, 900), 10)
    pygame.draw.line(screen, line_color, (0, 300), (900, 600), 10)

def mark_squres(row, col, player):
    board[row][col] = player
def available_square(row,col):
    return board[row][col] == 0
def is_board_full():
    for row in range(board_rows):
        for col in range(board_cols):
            if board[row][col] == :
                return False
        return True
def check_win(player):
    for row in range(board_rows):
         if board[0][col] = player and board[1][col] = player and board[2][col] = player:
              
# loop

